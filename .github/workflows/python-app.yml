name: Run all scripts continuously (1min pause, auto-reset every 3h, silent git, logs)

on:
  schedule:
    - cron: "0 */3 * * *"  # automatski restart svakih 3h
  workflow_dispatch:

permissions:
  contents: write  # da ovaj job sme da pushuje na repo

concurrency:
  group: continuous-run
  cancel-in-progress: true  # nikad dve instance paralelno, nema race condition

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 180  # maksimalno trajanje jedne sesije = 3h

    steps:
      - name: Checkout repo (main branch, full history)
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0               # treba nam cela istorija radi reset-a i push-a
          persist-credentials: true    # koristi GITHUB_TOKEN za push

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          playwright install chromium

      - name: Set timezone to Europe/Belgrade
        run: sudo timedatectl set-timezone Europe/Belgrade

      - name: Continuous execution with logs (stash-sync-pop workflow)
        run: |
          mkdir -p logs
          git config user.name "GitHub Action"
          git config user.email "actions@github.com"

          # budemo sigurni da smo na main (ako workflow krene iz nekog čudnog stanja)
          git switch main || git checkout -B main

          while true; do
            ts=$(date '+%Y-%m-%d_%H-%M')
            log_file="logs/run_${ts}.txt"

            echo "=== [$(date)] Starting run_all.py ===" | tee -a "$log_file"
            python run_all.py >>"$log_file" 2>&1
            echo "=== [$(date)] Finished run_all.py, syncing and pushing... ===" | tee -a "$log_file"

            #
            # 1. Sačuvaj sve lokalne izmene (novi izveštaji, tiketi, logovi...) u stash
            #    -u = stavi i ne-track-ovane fajlove (npr. novi logs/ fajlovi)
            #
            git stash push -u -m "autostash-from-action" || true

            #
            # 2. Dovedi lokalni main da BUDE remote main iz ovog trenutka
            #
            git fetch origin main || true
            git reset --hard origin/main || true

            #
            # 3. Vrati (pop) stash preko tog svežeg stanja
            #    Ako ima sitnih konflikata, git će vratiti non-zero exit;
            #    mi svejedno nastavljamo i posle 'git add -A' gazimo radnu kopiju.
            #
            git stash pop || true

            #
            # 4. Stage-uj sve generisane fajlove (ALL_MATCHES_AND_ARBS, TIKETI/tiketi.txt, izvestaji/, logs/, itd.)
            #
            git add -A || true

            #
            # 5. Commit (ako nema promena, 'git commit' vrati non-zero i mi samo preskočimo)
            #
            git commit -m "auto: run_all update $(date '+%Y-%m-%d %H:%M')" || true

            #
            # 6. Push na origin/main
            #
            git push origin main || echo "[git] Push skipped (fast-forward race or nothing to push)" | tee -a "$log_file"

            echo "=== [$(date)] Sleeping 1 minute before next cycle... ===" | tee -a "$log_file"
            sleep 60
          done
